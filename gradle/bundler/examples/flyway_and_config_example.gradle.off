// Project Specific Bundler Tasks
// ==================================================

def installPath = file("$rootDir/install").getCanonicalPath()

configurations {
    deployDb
}

def flywayVersion = '2.2'
dependencies {
    deployDb     "com.googlecode.flyway:flyway-commandline:${flywayVersion}@tar.gz"
    deployDb     "com.oracle:ojdbc6:${oracleVersion}"
    // TODO - UnlimitedJCEPolicyJDK7.zip
}

// stage Flyway and DB scripts in the installer path
// =======================================================================
task stageFlyway(type: Copy, description: "Unzips Flyway commandline") {
    from(tarTree(configurations.deployDb.fileCollection{dep -> dep.name == 'flyway-commandline'}.singleFile))
    into "$installPath"
}
task stageOracleDriver(type: Copy, description: "Stages DB migration helper script") {
    from (configurations.deployDb.fileCollection{dep -> dep.name == 'ojdbc6'}.singleFile)
    into "$installPath/db/jars"
}
task stageDbScripts(type: Copy, description: "Stages DB migration helper script") {
    from ("$rootDir/service-implementation/src/main/resources/db") {
        include 'template/*.*', '*.py'
    }
    into "$installPath/db";
}
task stageDbMigrateSQL(type: Copy, description: "Stages DB migration helper script") {
    from ("$rootDir/service-implementation/src/main/resources/db/migration") {
        include '*.sql'
    }
    into "$installPath/db/sql"
}

task stagePersistenceScripting << {
    stageFlyway.execute()
    ant.move( toDir:"$installPath/db", overwrite:true ) {
        fileset(dir: "$installPath/flyway-${flywayVersion}")
    }
    stageOracleDriver.execute()
    stageDbMigrateSQL.execute()
    stageDbScripts.execute()
}
stagePersistenceScripting.outputs.dir("$installPath/db")


// stage application configs in the installer path
// =======================================================================
task stageAppConfigs(type: Copy, description: "Stage application configs") {
    from ("$rootDir/service-implementation/src/main/resources") {
        include '*.json', '*.properties'
    }
    into "$installPath/app-configs"
}
stageAppConfigs.outputs.dir("$installPath/app-configs")


distTar.dependsOn('stagePersistenceScripting')
distTar.dependsOn('stageAppConfigs')