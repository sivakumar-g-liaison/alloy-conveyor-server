/*
 * Copyright 2014 Netflix, Inc.
 * Copyright 2014 Liaison Technologies
 *
 *      Licensed under the Apache License, Version 2.0 (the "License");
 *      you may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 */

// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories {
        mavenLocal()
        mavenCentral() // maven { url 'http://jcenter.bintray.com' }
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    apply plugin: 'eclipse' //provides tasks for eclipse. If you don't use eclipse, simply don't use these tasks :)
    apply plugin: 'idea' 
	
    group = 'com.liaison.nucleus'
		
	    // Define the Semantic Version number as the first line of RELEASE_NOTES.md
	    file("${rootDir}/RELEASE_NOTES.md").withReader {
	        version = it.readLine()
	    }
		// Define version name used in specifying webapp root context
		if (version.contains('-SNAPSHOT')) {
			ext.versionName = 'v' + (version.substring(0, version.indexOf('-SNAPSHOT'))) 
		} else {
			ext.versionName = "v${version}"		
		}

    repositories { 
        mavenCentral() // maven { url: 'http://jcenter.bintray.com' }

        // Liaison Private Maven artifact repos (Nexus)
        maven { url releasesArtifactRepoURL }
        maven { url snapshotsArtifactRepoURL }
        maven { url thirdpartyArtifactRepoURL }
    }
    
    configurations {
        all {
              // Most of the time this is a bad idea with little upside:   // check for updates every build
              //resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }
    }    
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/bundler/bundle.gradle')
apply from: file('gradle/bundler/framework.gradle')
apply from: file('gradle/bundler_project.gradle')
apply from: file('gradle/slf4j-fix.gradle')

war {
    //a hack to remove the empty project_root war from consideration
    archiveName=".ignore_me_seriously_thanks"
}

task showMeCache << {
    configurations.compile.each { println it }
}

subprojects {

    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project

    // TODO should move dependencies to subprojects?
    dependencies {

        compile 'com.google.guava:guava:11.0.2'
       
        //swagger
        compile 'com.wordnik:swagger-jersey-jaxrs_2.10:1.3.1'
        testCompile 'org.testng:testng:6.8'

        //Dependency for ACL integration 
        compile 'com.liaison.commons.acl:acl-commons-lib:5.+'
     }

    test {
        // workaround for Java7 and Cobutura/Emma instrumentation problem
        jvmArgs '-XX:-UseSplitVerifier'    
	ignoreFailures = false
        jvmArgs "-XX:-UseSplitVerifier"
		useTestNG()
        //ignoreFailures = false
    }
}

/*
 * karyon-admin provides rest services that expose administrative data
 * like configuration properties, classes/jars loaded, jmx properties, etc
 *
 */
/*project(':karyon-admin') {
    dependencies {
        compile "com.netflix.karyon:karyon-core:${karyonVersion}"

	compile "com.netflix.karyon:karyon-extensions:1.0.22"
        compile 'javax.ws.rs:jsr311-api:1.1.1'

	// Added by senthilvel for downloading servlet-3.0 jar from maven repo
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	
        compile 'org.eclipse.jetty:jetty-server:7.6.7.v20120910'
        compile 'org.eclipse.jetty:jetty-servlet:7.6.7.v20120910'
        compile 'com.sun.jersey.contribs:jersey-guice:1.8'

        compile 'com.google.inject.extensions:guice-servlet:3.0'
        compile 'com.netflix.pytheas:pytheas-core:1.11'
        runtime 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'
	testCompile 'org.testng:testng:6.8'
    }
    
    test {
        // com.netflix.adminresources.AdminResourceTest fails intermitantly
        // TODO this should be fixed.  remove exclusion and test
        exclude 'com/netflix/adminresources/**'
    }    

}
*/

/*
 * karyon-admin-web puts a pretty face (webapp) on karyon-admin
 */
/*project(':karyon-admin-web') {
    dependencies {
        compile project(':karyon-admin')
        compile 'com.google.code.gson:gson:2.1'
        compile 'com.netflix.pytheas:pytheas-core:1.11'
        testCompile 'org.testng:testng:6.8'

//little hack for development
//        compile fileTree(dir: '../libs', include: '*.jar')

        runtime 'org.freemarker:freemarker:2.3.19'
        runtime 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'
    }
}*/

project(':service-framework') {
    dependencies {

        testCompile 'org.testng:testng:6.8'        
        // commons-io and jackson-core support fs2
        compile 'commons-io:commons-io:2.4'
        compile 'com.fasterxml.jackson.core:jackson-core:2.2.2'

    }
}




allprojects {
    //repositories { mavenCentral() }
    configurations.all {
        // make sure we are using the latest commons-io
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.name == 'commons-io') {
                details.useTarget "commons-io:commons-io:2.4"
            }
        }
		
		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			if (details.requested.name == 'bcprov-jdk16') {
				details.useTarget "org.bouncycastle:bcprov-jdk15on:1.49"
			}
		}

    }
}
