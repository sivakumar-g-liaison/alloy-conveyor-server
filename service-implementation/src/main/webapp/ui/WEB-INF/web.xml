<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee ">

    <!--
    =========================================================================
    Begin:  Framework configuration
    =========================================================================
    -->

    <!-- Framework-level support for guice, please do not modify. -->
    <listener>
        <listener-class>com.netflix.karyon.server.guice.KaryonGuiceContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.netflix.adminresources.MyGuiceServletConfig</listener-class>
    </listener>

    <filter>
        <filter-name>guiceFilter</filter-name>
        <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>guiceFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!--  Commented by senthilvel-->
	<!--  This declaration part is deprecated by HelloworldComponent's initialize() -->
    <!-- Framework initialization servlet, please do not modify -->
    <servlet>
    <servlet-name>InitializationServlet</servlet-name>
        <servlet-class>com.liaison.framework.bootstrap.InitializationServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>InitializationServlet</servlet-name>
        <url-pattern>/init</url-pattern>
    </servlet-mapping>

	<!-- Added by senthilvel for AsyncServlet Injection -->
	<servlet>
        <servlet-name>AsyncServlet</servlet-name>
        <servlet-class>com.liaison.framework.async.AsyncServlet</servlet-class>
	<init-param>
		<param-name>threadpoolsize</param-name>
		<param-value>100</param-value>
	</init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>AsyncServlet</servlet-name>
        <url-pattern>/async</url-pattern>
    </servlet-mapping>




	<!-- Framework-defined dynamic services support, please do not modify -->

    <servlet>
        <servlet-name>DynamicRest</servlet-name>
        <servlet-class>com.liaison.framework.dynamic.DynamicServicesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DynamicRest</servlet-name>
        <url-pattern>/dyn/*</url-pattern>
    </servlet-mapping>

    <!-- Supports Jersey endpoints, please do not modify -->
    <servlet>
        <servlet-name>StaticRest</servlet-name>
        <servlet-class>
            com.sun.jersey.spi.container.servlet.ServletContainer
        </servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.liaison.mailbox.service;com.wordnik.swagger.jersey.listing;com.liaison.service.resources.acl</param-value>

        </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- ACL -->
          <init-param>
            <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
            <param-value>com.liaison.commons.acl.resource.filter.ValidationFilterFactory</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <filter>
        <filter-name>ExceptionFilter</filter-name>
        <filter-class>com.liaison.framework.FrameworkFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>ExceptionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    =========================================================================
    End:  Framework configuration
    =========================================================================
    -->

    <!--
    =========================================================================
    Begin:  Servlet implementation configuration
    =========================================================================
    -->

    <!-- Each servlet implementation may map incoming rest requests to a unique base URI -->
    <servlet-mapping>
        <servlet-name>StaticRest</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <!--
    =========================================================================
    End:  Servlet implementation configuration
    =========================================================================
    -->


	<!--Swagger config -->
	<servlet>
	  <servlet-name>JerseyJaxrsConfig</servlet-name>
	  <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
	  <init-param>
	    <param-name>api.version</param-name>
	    <param-value>1.0.0</param-value>
	  </init-param>
	  <init-param>
	    <param-name>swagger.api.basepath</param-name>
	    <!-- change localhost to production server name -->
	    <param-value>/g2mailboxservice/rest</param-value>
	  </init-param>
	  <load-on-startup>2</load-on-startup>
	</servlet>
	<servlet>
        <servlet-name>SwaggerBootstrap</servlet-name>
        <servlet-class>com.liaison.service.core.SwaggerBootstrap</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    
	<!--
    ==============================================================================
       Enable only for development when using python to make calls to tomcat  and
       make sure containes (tomcat) provides the jar required for this
    ==============================================================================

    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->



</web-app>
