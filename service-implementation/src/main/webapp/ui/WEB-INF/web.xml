<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee ">

    <!--
    =========================================================================
    Begin:  Framework configuration
    =========================================================================
    -->

    <!-- Framework-level support for guice, please do not modify. -->
    <listener>
        <listener-class>com.netflix.karyon.server.guice.KaryonGuiceContextListener</listener-class>
    </listener>

    <filter>
        <filter-name>guiceFilter</filter-name>
        <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>guiceFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Framework initialization servlet, please do not modify -->
    <servlet>
    	<servlet-name>InitializationServlet</servlet-name>
        <servlet-class>com.liaison.framework.bootstrap.InitializationServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>InitializationServlet</servlet-name>
        <url-pattern>/init</url-pattern>
    </servlet-mapping>

    <!-- Supports Jersey endpoints, please do not modify -->
    <servlet>
        <servlet-name>StaticRest</servlet-name>
        <servlet-class>
            com.sun.jersey.spi.container.servlet.ServletContainer
        </servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.liaison.mailbox.service.rest;com.wordnik.swagger.jersey.listing;com.liaison.service.resources.acl;com.liaison.service;com.liaison.threadmanagement.resources</param-value>
         </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <!-- ACL -->
          <init-param>
            <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
            <param-value>com.liaison.commons.acl.resource.filter.ValidationFilterFactory</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <filter>
        <filter-name>ExceptionFilter</filter-name>
        <filter-class>com.liaison.framework.FrameworkFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>ExceptionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    =========================================================================
    End:  Framework configuration
    =========================================================================
    -->

    <!--
    =========================================================================
    Begin:  Servlet implementation configuration
    =========================================================================
    -->

    <!-- Each servlet implementation may map incoming rest requests to a unique base URI -->
    <servlet-mapping>
        <servlet-name>StaticRest</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/config/ui/*</url-pattern>
		<url-pattern>/api-docs/swagger-ui/*</url-pattern>
	</servlet-mapping>

    <!--
    =========================================================================
    End:  Servlet implementation configuration
    =========================================================================
    -->


	<!--Swagger config -->
	<servlet>
	  <servlet-name>JerseyJaxrsConfig</servlet-name>
	  <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>
	  <init-param>
	    <param-name>api.version</param-name>
	    <param-value>1.0.0</param-value>
	  </init-param>
	  <init-param>
	    <param-name>swagger.api.basepath</param-name>
	    <!-- change localhost to production server name -->
	    <param-value>/g2mailboxservice/rest</param-value>
	  </init-param>
	  <load-on-startup>2</load-on-startup>
	</servlet>
	<servlet>
        <servlet-name>SwaggerBootstrap</servlet-name>
        <servlet-class>com.liaison.mailbox.service.core.swagger.SwaggerBootstrap</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

	<!--
    =========================================================================
    Begin:  Metric Filters
    =========================================================================
    -->
    
    <listener>
        <listener-class>com.liaison.metrics.rest.InstrumentedFilterContextListenerImpl</listener-class>
    </listener>

    <filter>
        <filter-name>aclFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/rest/AclResourceMaps</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>aclFilter</filter-name>
        <url-pattern>/rest/AclResourceMaps</url-pattern>
    </filter-mapping>

	<!-- ComponentVerificationResource -->
    <filter>
        <filter-name>componentVerifyFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/verifycomponent</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>componentVerifyFilter</filter-name>
        <url-pattern>/verifycomponent</url-pattern>
    </filter-mapping>
    
    <!-- DropboxAuthenticationResource -->
    <filter>
        <filter-name>dropboxAuthFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/authenticate</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxAuthFilter</filter-name>
        <url-pattern>/config/dropbox/authenticate</url-pattern>
    </filter-mapping>
    
    <!-- DropboxFileStagedResource -->
    <filter>
        <filter-name>dropboxFileStageFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/stagedFiles</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxFileStageFilter</filter-name>
        <url-pattern>/config/dropbox/stagedFiles</url-pattern>
    </filter-mapping>
    
    <!-- DropboxFileTransferResource -->
    <filter>
        <filter-name>dropboxFileTransStageFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/transferContent</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxFileTransStageFilter</filter-name>
        <url-pattern>/config/dropbox/transferContent</url-pattern>
    </filter-mapping>
    
    <!-- DropboxManifestResource -->
    <filter>
        <filter-name>dropboxManifestFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/authAndGetACL</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxManifestFilter</filter-name>
        <url-pattern>/config/dropbox/authAndGetACL</url-pattern>
    </filter-mapping>
    
    <!-- DropboxStagedFileDownloadResource -->
    <filter>
        <filter-name>dropboxStagedFileDLFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/stagedFiles/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxStagedFileDLFilter</filter-name>
        <url-pattern>/config/dropbox/stagedFiles/*</url-pattern>
    </filter-mapping>
    
    <!-- DropboxTransferProfileResource -->
    <filter>
        <filter-name>dropboxTransferProfileFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/dropbox/transferProfiles</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>dropboxTransferProfileFilter</filter-name>
        <url-pattern>/config/dropbox/transferProfiles</url-pattern>
    </filter-mapping>
    
    <!-- MailboxConfigurationDetailsResource -->
    <filter>
        <filter-name>mailboxConfigDetailsFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxConfigDetailsFilter</filter-name>
        <url-pattern>/config/mailbox/*</url-pattern>
    </filter-mapping>
    
    <!-- MailBoxConfigurationResource -->
    <filter>
        <filter-name>mailboxConfigFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxConfigFilter</filter-name>
        <url-pattern>/config/mailbox</url-pattern>
    </filter-mapping>
    
    <!-- MailBoxProfileResource -->
    <filter>
        <filter-name>mailboxProfileFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/profile</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxProfileFilter</filter-name>
        <url-pattern>/config/mailbox/profile</url-pattern>
    </filter-mapping>
    
    <!-- MailboxReadResource -->
    <filter>
        <filter-name>mailboxReadFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/entity/read/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxReadFilter</filter-name>
        <url-pattern>/config/entity/read/*</url-pattern>
    </filter-mapping>
    
    <!-- MailBoxScriptConfigurationResource -->
    <!-- MailBoxScriptDetailsConfigurationResource -->
    <filter>
        <filter-name>mailBoxScriptDetConfigFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/git/content/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailBoxScriptDetConfigFilter</filter-name>
        <url-pattern>/config/mailbox/git/content/*</url-pattern>
    </filter-mapping>

    <!-- MailboxServiceConfigurationsResource -->
    <filter>
        <filter-name>mailBoxServiceConfigFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/serviceconfigurations</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailBoxServiceConfigFilter</filter-name>
        <url-pattern>/config/mailbox/serviceconfigurations</url-pattern>
    </filter-mapping>
    
    <!-- MailboxTenancyKeyResource -->
    <filter>
        <filter-name>mailboxTenancyKeyFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/tenancyKeys</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxTenancyKeyFilter</filter-name>
        <url-pattern>/config/mailbox/tenancyKeys</url-pattern>
    </filter-mapping>
    
    <!-- MailboxWatchDogResource -->
    <filter>
        <filter-name>mailboxWatchDogFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/trigger/status</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>mailboxWatchDogFilter</filter-name>
        <url-pattern>/config/mailbox/trigger/status</url-pattern>
    </filter-mapping>
    
    <!-- ProcessorAdminDetailsResource -->
    <filter>
        <filter-name>processorAdminDetFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/processoradmin/processor/status</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>processorAdminDetFilter</filter-name>
        <url-pattern>/config/mailbox/processoradmin/processor/status</url-pattern>
    </filter-mapping>
    
    <!-- ProcessorSearchResource -->
    <filter>
        <filter-name>processorSearchFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/searchprocessor</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>processorSearchFilter</filter-name>
        <url-pattern>/config/mailbox/searchprocessor</url-pattern>
    </filter-mapping>
    
    <!-- TriggerProfileResource -->
    <filter>
        <filter-name>triggerProfileFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/trigger/profile</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>triggerProfileFilter</filter-name>
        <url-pattern>/config/mailbox/trigger/profile</url-pattern>
    </filter-mapping>
    
    <!-- TypeaheadResource -->
    <filter>
        <filter-name>typeaheadFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/config/mailbox/typeAhead/getEntityByNames</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>typeaheadFilter</filter-name>
        <url-pattern>/config/mailbox/typeAhead/getEntityByNames</url-pattern>
    </filter-mapping>
    
    <!-- HTTPListenerResource -->
    <filter>
        <filter-name>httpSyncFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/process/sync/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>httpSyncFilter</filter-name>
        <url-pattern>/process/sync/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>httpAsyncFilter</filter-name>
        <filter-class>com.codahale.metrics.servlet.InstrumentedFilter</filter-class>
        <init-param>
            <param-name>name-prefix</param-name>
            <param-value>/process/async/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>httpAsyncFilter</filter-name>
        <url-pattern>/process/async/*</url-pattern>
    </filter-mapping>
    
    <listener>
        <listener-class>com.liaison.health.core.MetricsServletContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.liaison.health.core.HealthServletContextListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>metrics</servlet-name>
        <servlet-class>com.codahale.metrics.servlets.AdminServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>metrics</servlet-name>
        <url-pattern>/metrics/*</url-pattern>
    </servlet-mapping>

	<!-- Error config -->
	<error-page>
	    <error-code>404</error-code>
	    <location>/config/ui/error-404.html</location>
	</error-page>
	<error-page>
	    <error-code>403</error-code>
	    <location>/config/ui/error-403.html</location>
	</error-page>
	<error-page>
	    <error-code>500</error-code>
	    <location>/config/ui/error-500.html</location>
	</error-page>

</web-app>
